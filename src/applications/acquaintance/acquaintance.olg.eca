ECA Rule prov_ra_1Eca0Ins ACTION_REMOTE_SEND<eliveTemp(@RLOC, Local, A, C, RID, RWeight, R, List)> :- EVENT_INSERT<liveEvent(@Local, A, C)>, PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), RLOC := Local, RWeight := 1, R := ra, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_ra_1Eca0Del ACTION_REMOTE_SEND<eliveTempDelete(@RLOC, Local, A, C, RID, RWeight, R, List)> :- EVENT_DELETE<liveEvent(@Local, A, C)>, PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), RLOC := Local, RWeight := 1, R := ra, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_ra_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eliveTemp(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_ra_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eliveTempDelete(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_ra_3_ecaAdd ACTION_REMOTE_SEND<elive(@Local, A, C, RID, RWeight, RLOC)> :- EVENT_RECV<eliveTemp(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_ra_3_ecaDel ACTION_REMOTE_SEND<eliveDelete(@Local, A, C, RID, RWeight, RLOC)> :- EVENT_RECV<eliveTempDelete(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_ra_4_ecaAdd ACTION_ADD<live(@Local, A, C)> :- EVENT_RECV<elive(@Local, A, C, RID, RWeight, RLOC)>.
ECA Rule prov_ra_4_ecaDel ACTION_DELETE<live(@Local, A, C)> :- EVENT_RECV<eliveDelete(@Local, A, C, RID, RWeight, RLOC)>.
ECA Rule prov_ra_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<elive(@Local, A, C, RID, RWeight, RLOC)>, VID := f_sha1(((live+ Local)+ A)+ C), Score := -1.
ECA Rule prov_ra_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eliveDelete(@Local, A, C, RID, RWeight, RLOC)>, VID := f_sha1(((live+ Local)+ A)+ C), Score := -1.
ECA Rule prov_rb_1Eca0Ins ACTION_REMOTE_SEND<elikeTemp(@RLOC, Local, A, C, RID, RWeight, R, List)> :- EVENT_INSERT<likeEvent(@Local, A, C)>, PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), RLOC := Local, RWeight := 1, R := rb, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rb_1Eca0Del ACTION_REMOTE_SEND<elikeTempDelete(@RLOC, Local, A, C, RID, RWeight, R, List)> :- EVENT_DELETE<likeEvent(@Local, A, C)>, PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), RLOC := Local, RWeight := 1, R := rb, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rb_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<elikeTemp(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_rb_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<elikeTempDelete(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_rb_3_ecaAdd ACTION_REMOTE_SEND<elike(@Local, A, C, RID, RWeight, RLOC)> :- EVENT_RECV<elikeTemp(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_rb_3_ecaDel ACTION_REMOTE_SEND<elikeDelete(@Local, A, C, RID, RWeight, RLOC)> :- EVENT_RECV<elikeTempDelete(@RLOC, Local, A, C, RID, RWeight, R, List)>.
ECA Rule prov_rb_4_ecaAdd ACTION_ADD<like(@Local, A, C)> :- EVENT_RECV<elike(@Local, A, C, RID, RWeight, RLOC)>.
ECA Rule prov_rb_4_ecaDel ACTION_DELETE<like(@Local, A, C)> :- EVENT_RECV<elikeDelete(@Local, A, C, RID, RWeight, RLOC)>.
ECA Rule prov_rb_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<elike(@Local, A, C, RID, RWeight, RLOC)>, VID := f_sha1(((like+ Local)+ A)+ C), Score := -1.
ECA Rule prov_rb_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<elikeDelete(@Local, A, C, RID, RWeight, RLOC)>, VID := f_sha1(((like+ Local)+ A)+ C), Score := -1.
ECA Rule prov_rc_1Eca0Ins ACTION_REMOTE_SEND<eknowTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<knowEvent(@Local, A, B, S)>, PID1 := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := rc, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rc_1Eca0Del ACTION_REMOTE_SEND<eknowTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<knowEvent(@Local, A, B, S)>, PID1 := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), List := f_append(PID1), RLOC := Local, RWeight := 1, R := rc, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rc_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eknowTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_rc_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eknowTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_rc_3_ecaAdd ACTION_REMOTE_SEND<eknow(@Local, A, B, S, RID, RWeight, RLOC)> :- EVENT_RECV<eknowTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_rc_3_ecaDel ACTION_REMOTE_SEND<eknowDelete(@Local, A, B, S, RID, RWeight, RLOC)> :- EVENT_RECV<eknowTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_rc_4_ecaAdd ACTION_ADD<know(@Local, A, B, S)> :- EVENT_RECV<eknow(@Local, A, B, S, RID, RWeight, RLOC)>.
ECA Rule prov_rc_4_ecaDel ACTION_DELETE<know(@Local, A, B, S)> :- EVENT_RECV<eknowDelete(@Local, A, B, S, RID, RWeight, RLOC)>.
ECA Rule prov_rc_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eknow(@Local, A, B, S, RID, RWeight, RLOC)>, VID := f_sha1((((know+ Local)+ A)+ B)+ S), Score := -1.
ECA Rule prov_rc_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eknowDelete(@Local, A, B, S, RID, RWeight, RLOC)>, VID := f_sha1((((know+ Local)+ A)+ B)+ S), Score := -1.
ECA Rule prov_r1_1Eca0Ins ACTION_REMOTE_SEND<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<liveEvent(@Local, A, C)>, live(@Local, B, C), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca0Del ACTION_REMOTE_SEND<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<liveEvent(@Local, A, C)>, live(@Local, B, C), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca3Ins ACTION_REMOTE_SEND<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<live(@Local, B, C)>, liveEvent(@Local, A, C), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca3Del ACTION_REMOTE_SEND<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<live(@Local, B, C)>, liveEvent(@Local, A, C), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_r1_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_r1_3_ecaAdd ACTION_REMOTE_SEND<eknowEvent(@Local, A, B, S, RID, RWeight, RLOC)> :- EVENT_RECV<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_r1_3_ecaDel ACTION_REMOTE_SEND<eknowEventDelete(@Local, A, B, S, RID, RWeight, RLOC)> :- EVENT_RECV<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)>.
ECA Rule prov_r1_4_ecaAdd ACTION_ADD<knowEvent(@Local, A, B, S)> :- EVENT_RECV<eknowEvent(@Local, A, B, S, RID, RWeight, RLOC)>.
ECA Rule prov_r1_4_ecaDel ACTION_DELETE<knowEvent(@Local, A, B, S)> :- EVENT_RECV<eknowEventDelete(@Local, A, B, S, RID, RWeight, RLOC)>.
ECA Rule prov_r1_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eknowEvent(@Local, A, B, S, RID, RWeight, RLOC)>, VID := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), Score := -1.
ECA Rule prov_r1_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eknowEventDelete(@Local, A, B, S, RID, RWeight, RLOC)>, VID := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), Score := -1.
ECA Rule prov_r2_1Eca0Ins ACTION_REMOTE_SEND<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<likeEvent(@Local, A, C)>, like(@Local, B, C), PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((like+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_1Eca0Del ACTION_REMOTE_SEND<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<likeEvent(@Local, A, C)>, like(@Local, B, C), PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((like+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_1Eca3Ins ACTION_REMOTE_SEND<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<like(@Local, B, C)>, likeEvent(@Local, A, C), PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((like+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_1Eca3Del ACTION_REMOTE_SEND<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<like(@Local, B, C)>, likeEvent(@Local, A, C), PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), PID2 := f_sha1(((like+ Local)+ B)+ C), List2 := f_append(PID2), List := f_concat(List, List2), A != B, S := 1, RLOC := Local, RWeight := 1, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca0Ins ACTION_REMOTE_SEND<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<relation(@Local, A, B)>, PID1 := f_sha1(((relation+ Local)+ A)+ B), List := f_append(PID1), A != B, S := 0, RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca0Del ACTION_REMOTE_SEND<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<relation(@Local, A, B)>, PID1 := f_sha1(((relation+ Local)+ A)+ B), List := f_append(PID1), A != B, S := 0, RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca0Ins ACTION_REMOTE_SEND<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<liveEvent(@Local, A, C1)>, live(@Local, B, C2), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C1), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C2), List2 := f_append(PID2), List := f_concat(List, List2), C1 != C2, A != B, S := 0, RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca0Del ACTION_REMOTE_SEND<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<liveEvent(@Local, A, C1)>, live(@Local, B, C2), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C1), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C2), List2 := f_append(PID2), List := f_concat(List, List2), C1 != C2, A != B, S := 0, RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca3Ins ACTION_REMOTE_SEND<eknowEventTemp(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_INSERT<live(@Local, B, C2)>, liveEvent(@Local, A, C1), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C1), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C2), List2 := f_append(PID2), List := f_concat(List, List2), C1 != C2, A != B, S := 0, RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r5_1Eca3Del ACTION_REMOTE_SEND<eknowEventTempDelete(@RLOC, Local, A, B, S, RID, RWeight, R, List)> :- EVENT_DELETE<live(@Local, B, C2)>, liveEvent(@Local, A, C1), PID1 := f_sha1(((liveEvent+ Local)+ A)+ C1), List := f_append(PID1), PID2 := f_sha1(((live+ Local)+ B)+ C2), List2 := f_append(PID2), List := f_concat(List, List2), C1 != C2, A != B, S := 0, RLOC := Local, RWeight := 1, R := r5, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<liveEvent(@Local, A, C)>, PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((liveEvent+ Local)+ A)+ C), Name := liveEvent, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<liveEvent(@Local, A, C)>, PID1 := f_sha1(((liveEvent+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((liveEvent+ Local)+ A)+ C), Name := liveEvent, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r6, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r6_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r6_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r6_3_ecaAdd ACTION_REMOTE_SEND<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)> :- EVENT_RECV<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r6_3_ecaDel ACTION_REMOTE_SEND<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)> :- EVENT_RECV<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r6_4_ecaAdd ACTION_ADD<shaResult(@Local, VID, Content)> :- EVENT_RECV<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)>.
ECA Rule prov_r6_4_ecaDel ACTION_DELETE<shaResult(@Local, VID, Content)> :- EVENT_RECV<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)>.
ECA Rule prov_r6_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)>, VID := f_sha1(((shaResult+ Local)+ VID)+ Content), Score := -1.
ECA Rule prov_r6_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)>, VID := f_sha1(((shaResult+ Local)+ VID)+ Content), Score := -1.
ECA Rule prov_r7_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<likeEvent(@Local, A, C)>, PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((likeEvent+ Local)+ A)+ C), Name := likeEvent, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r7, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r7_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<likeEvent(@Local, A, C)>, PID1 := f_sha1(((likeEvent+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((likeEvent+ Local)+ A)+ C), Name := likeEvent, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r7, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r8_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<knowEvent(@Local, A, B, S)>, PID1 := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), List := f_append(PID1), VID := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), Name := knowEvent, Content := ((Name+ A)+ B)+ S, RLOC := Local, RWeight := 1, R := r8, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r8_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<knowEvent(@Local, A, B, S)>, PID1 := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), List := f_append(PID1), VID := f_sha1((((knowEvent+ Local)+ A)+ B)+ S), Name := knowEvent, Content := ((Name+ A)+ B)+ S, RLOC := Local, RWeight := 1, R := r8, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r9_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<relation(@Local, A, B)>, PID1 := f_sha1(((relation+ Local)+ A)+ B), List := f_append(PID1), VID := f_sha1(((relation+ Local)+ A)+ C), Name := relation, Content := (Name+ A)+ B, RLOC := Local, RWeight := 1, R := r9, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r9_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<relation(@Local, A, B)>, PID1 := f_sha1(((relation+ Local)+ A)+ B), List := f_append(PID1), VID := f_sha1(((relation+ Local)+ A)+ C), Name := relation, Content := (Name+ A)+ B, RLOC := Local, RWeight := 1, R := r9, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r10_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<live(@Local, A, C)>, PID1 := f_sha1(((live+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((live+ Local)+ A)+ C), Name := live, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r10, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r10_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<live(@Local, A, C)>, PID1 := f_sha1(((live+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((live+ Local)+ A)+ C), Name := live, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r10, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r11_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<like(@Local, A, C)>, PID1 := f_sha1(((like+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((like+ Local)+ A)+ C), Name := like, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r11, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r11_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<like(@Local, A, C)>, PID1 := f_sha1(((like+ Local)+ A)+ C), List := f_append(PID1), VID := f_sha1(((like+ Local)+ A)+ C), Name := like, Content := (Name+ A)+ C, RLOC := Local, RWeight := 1, R := r11, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r12_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<know(@Local, A, B, S)>, PID1 := f_sha1((((know+ Local)+ A)+ B)+ S), List := f_append(PID1), VID := f_sha1((((know+ Local)+ A)+ B)+ S), Name := know, Content := ((Name+ A)+ B)+ S, RLOC := Local, RWeight := 1, R := r12, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r12_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<know(@Local, A, B, S)>, PID1 := f_sha1((((know+ Local)+ A)+ B)+ S), List := f_append(PID1), VID := f_sha1((((know+ Local)+ A)+ B)+ S), Name := know, Content := ((Name+ A)+ B)+ S, RLOC := Local, RWeight := 1, R := r12, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_edb_1Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<likeEvent(@Local, A, C)>, RLoc := Local, VID := f_sha1(((likeEvent+ Local)+ A)+ C), RID := VID, Score := -1.
ECA Rule prov_edb_1Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<likeEvent(@Local, A, C)>, RLoc := Local, VID := f_sha1(((likeEvent+ Local)+ A)+ C), RID := VID, Score := -1.
ECA Rule prov_edb_2Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<liveEvent(@Local, A, C)>, RLoc := Local, VID := f_sha1(((liveEvent+ Local)+ A)+ C), RID := VID, Score := -1.
ECA Rule prov_edb_2Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<liveEvent(@Local, A, C)>, RLoc := Local, VID := f_sha1(((liveEvent+ Local)+ A)+ C), RID := VID, Score := -1.
ECA Rule prov_edb_3Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<relation(@Local, A, B)>, RLoc := Local, VID := f_sha1(((relation+ Local)+ A)+ B), RID := VID, Score := -1.
ECA Rule prov_edb_3Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<relation(@Local, A, B)>, RLoc := Local, VID := f_sha1(((relation+ Local)+ A)+ B), RID := VID, Score := -1.
ECA Rule edb1_eca ACTION_REMOTE_SEND<pReturn(@Ret, QID, VID, Prov)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, prov(@X, VID, RID, RLoc, Score), RID == VID, Prov := f_pEDB(VID, X).
ECA Rule idb1_eca ACTION_ADD<pQList(@X, QID, LIST< RID >)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, prov(@X, VID, RID, RLoc, Score), RID != VID.
ECA Rule idb2_eca ACTION_ADD<pResultTmp(@X, QID, Ret, VID, Buf)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, Buf := f_empty().
ECA Rule idb3_eca ACTION_LOCAL_SEND<pIterate(@X, QID, N)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, N := 1.
ECA Rule idb4_eca ACTION_LOCAL_SEND<pIterate(@X, QID, N)> :- EVENT_RECV<pIterate(@X, QID, N1)>, pQList(@X, QID, List), N1 < f_size(List), N := N1+ 1.
ECA Rule idb5_eca ACTION_LOCAL_SEND<eRuleQuery(@X, NQID, RID)> :- EVENT_RECV<pIterate(@X, QID, N)>, pQList(@X, QID, List), N <= f_size(List), RID := f_item(List, N), NQID := f_sha1((+ QID)+ RID).
ECA Rule idb6_eca ACTION_REMOTE_SEND<ruleQuery(@RLoc, QID, RID, X)> :- EVENT_RECV<eRuleQuery(@X, QID, RID)>, prov(@X, VID, RID, RLoc, Score).
ECA Rule idb7_eca ACTION_ADD<pResultTmp(@X, QID, Ret, VID, Buf)> :- EVENT_RECV<rReturn(@X, NQID, RID, Prov)>, pResultTmp(@X, QID, Ret, VID, Buf1), NQID == f_sha1((+ QID)+ RID), Buf2 := f_append(Prov), Buf := f_concat(Buf1, Buf2).
ECA Rule idb8Eca0Ins ACTION_LOCAL_SEND<ePReturn(@X, QID)> :- EVENT_INSERT<pResultTmp(@X, QID, Ret, VID, Buf)>, pQList(@X, QID, List), f_size(Buf) == f_size(List), f_size(Buf) != 0.
ECA Rule idb8Eca1Ins ACTION_LOCAL_SEND<ePReturn(@X, QID)> :- EVENT_INSERT<pQList(@X, QID, List)>, pResultTmp(@X, QID, Ret, VID, Buf), f_size(Buf) == f_size(List), f_size(Buf) != 0.
ECA Rule idb9_eca ACTION_REMOTE_SEND<pReturn(@Ret, QID, VID, Prov)> :- EVENT_RECV<ePReturn(@X, QID)>, pResultTmp(@X, QID, Ret, VID, Buf), Prov := f_pIDB(Buf, X).
ECA Rule rv1_eca ACTION_ADD<rQList(@X, QID, List)> :- EVENT_RECV<ruleQuery(@X, QID, RID, Ret)>, ruleExec(@X, RID, RWeight, R, List).
ECA Rule rv2_eca ACTION_ADD<rResultTmp(@X, QID, Ret, RID, Buf)> :- EVENT_RECV<ruleQuery(@X, QID, RID, Ret)>, Buf := f_empty().
ECA Rule rv3_eca ACTION_LOCAL_SEND<rIterate(@X, QID, N)> :- EVENT_RECV<ruleQuery(@X, QID, RID, Ret)>, N := 1.
ECA Rule rv4_eca ACTION_LOCAL_SEND<rIterate(@X, QID, N)> :- EVENT_RECV<rIterate(@X, QID, N1)>, rQList(@X, QID, List), N1 < f_size(List), N := N1+ 1.
ECA Rule rv5_eca ACTION_LOCAL_SEND<eProvQuery(@X, NQID, VID)> :- EVENT_RECV<rIterate(@X, QID, N)>, rQList(@X, QID, List), VID := f_item(List, N), NQID := f_sha1((+ QID)+ VID).
ECA Rule rv6_eca ACTION_LOCAL_SEND<provQuery(@X, QID, VID, $1)> :- EVENT_RECV<eProvQuery(@X, QID, VID)>, $1 := X.
ECA Rule rv7_eca ACTION_ADD<rResultTmp(@X, QID, Ret, RID, Buf)> :- EVENT_RECV<pReturn(@X, NQID, VID, Prov)>, rResultTmp(@X, QID, Ret, RID, Buf1), NQID == f_sha1((+ QID)+ VID), Buf2 := f_append(Prov), Buf := f_concat(Buf1, Buf2).
ECA Rule rv8Eca0Ins ACTION_LOCAL_SEND<eRReturn(@X, QID)> :- EVENT_INSERT<rResultTmp(@X, QID, Ret, RID, Buf)>, rQList(@X, QID, List), f_size(Buf) == f_size(List).
ECA Rule rv8Eca1Ins ACTION_LOCAL_SEND<eRReturn(@X, QID)> :- EVENT_INSERT<rQList(@X, QID, List)>, rResultTmp(@X, QID, Ret, RID, Buf), f_size(Buf) == f_size(List).
ECA Rule rv9_eca ACTION_REMOTE_SEND<rReturn(@Ret, QID, RID, Prov)> :- EVENT_RECV<eRReturn(@X, QID)>, rResultTmp(@X, QID, Ret, RID, Buf), ruleExec(@X, RID, RWeight, R, List), Prov := f_pRULE(Buf, X, R, RWeight).
